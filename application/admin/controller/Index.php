<?php
namespace app\admin\controller;

use app\admin\controller\Common;
use app\admin\model\User;
use app\admin\model\Menu;

class Index extends Common{
    protected $menuModel;
    protected $cateModel;
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->menuModel=model('Menu');
        $this->cateModel=model('Category');
    }

    public function index(){
        config('name','123');
        return $this->fetch();
    }

    public function welcome(){
        return $this->fetch();
    }

    public function category(){
        $categorys=$this->cateModel->select();
        return $this->fetch('',['categorys'=>$categorys]);
    }

    public function categoryadd(){
        if(request()->isAjax()){
            $data=input('post.');
            $data['createtime']=date('Y-m-d H:i:s',time());
            $data['updatetime']=date('Y-m-d H:i:s',time());
//            halt($data);
            $result=$this->cateModel->allowField(true)->save($data);
            if($result){
                echo json_encode(['status'=>'200','msg'=>'成功']);
            }else{
                echo json_encode(['status'=>'500','msg'=>'失败']);
            }
        }
        return $this->fetch();
    }

    public function categoryedit(){
        $id=input('id');
        $cateData=$this->cateModel->where("id = $id")->find();
        if(request()->isAjax()){
            $data=input('post.');
//            $data['id']=$id;
//            $result=$this->cateModel->isupdate()->save($data);
        }
        return $this->fetch('',['cateData'=>$cateData]);
    }

    public function categoryupd(){
        if(request()->isAjax()){
            $data=input('post.');
            halt($data);
//            $data['id']=$id;
//            $result=$this->cateModel->isupdate()->save($data);
        }
    }

    public function adminmenu(){
        return $this->fetch();
    }

    public function menuadd(){
        if(request()->isAjax()){
            $data=input('post.');
            $data['createtime']=date('Y-m-d H:i:s',time());
            $data['updatetime']=date('Y-m-d H:i:s',time());
//            halt($data);
            $result=$this->menuModel->allowField(true)->save($data);
            if(!$result){
                echo json_encode(['status'=>'500','msg'=>'失败']);
            }else{
                echo json_encode(['status'=>'200','msg'=>'成功']);
            }
        }
        $menus=$this->getSonsCat();
        return $this->fetch('',[
            'menus'=>$menus
        ]);
    }

    //定义无限极分类
    public function getSonsCat(){
        $data = $this->menuModel->select();
        return $this->_getSonsCat($data);
    }

    private function _getSonsCat($data,$pid=0,$deep=1){
        static $result = []; //静态数组后面递归调用的时候只会初始化一次，是不会清空此数组的
        foreach($data as $v){
            if($v['pid'] == $pid){
                $v['deep'] = $deep;
                $result[ $v['id'] ] = $v;
                //递归调用本身
                $this->_getSonsCat($data,$v['id'],$deep+1);
            }
        }
        return  $result;
    }
}